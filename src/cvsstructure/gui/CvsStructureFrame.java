package cvsstructure.gui;

import cvsstructure.model.Usuario;
import cvsstructure.CVSStructure;
import cvsstructure.util.Estatisticas;
import cvsstructure.database.ConnectionInout;
import cvsstructure.database.ConnectionIntegracao;
import cvsstructure.log.SfwLogger;
import cvsstructure.model.Cliente;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Scanner;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CvsStructureFrame.java
 *
 * Created on 11/09/2009, 14:43:25
 */
/**
 *
 * @author andrein
 */
public class CvsStructureFrame extends javax.swing.JFrame {
    //Vector arrUsers;

    //public String arrUsers[][] = new String[100][100];
    private Collection<Cliente> collectionCliente = new ArrayList<Cliente>();
    //int contador = 0;
    DefaultListModel model = new DefaultListModel();
    DefaultListModel modelInterfaces = new DefaultListModel();

    CVSStructure cvsStruct;
    private ArrayList<String> arrInterfaces;

    /** Creates new form CvsStructureFrame */
    public CvsStructureFrame() {
        initComponents();
        SfwLogger.cvsStructureFrame = this;

        jListUsuarios.setModel(model);
        jListInterfaces.setModel(modelInterfaces);

        cvsStruct = new CVSStructure();
 
        btSalvar.setEnabled(false);
        btCarregar.setEnabled(false);
        carregarUsuarios();

        /*
        arrUsers[0][1] = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.61.7)(PORT=1511)))(CONNECT_DATA=(SERVICE_NAME=HOMOL11)))";
        arrUsers[0][2] = "SFWIOCAM";
        arrUsers[0][3] = "SFWIOCAM";
        arrUsers[0][4] = "HOMOL11";
        contador += 1;
        
        arrUsers[1][1] = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.60.10)(PORT=1522)))(CONNECT_DATA=(SERVICE_NAME=TESTE10)))";
        arrUsers[1][2] = "comexiomer";
        arrUsers[1][3] = "comexiomer";
        arrUsers[1][4] = "teste10";
        contador += 1;

        arrUsers[2][1] = "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.61.148)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=XE)))";
        arrUsers[2][2] = "sfwioahd";
        arrUsers[2][3] = "sfwioahd";
        arrUsers[2][4] = "xe";
        model.addElement("sfwiocam/HOMOL11");
        model.addElement("comexiomer/teste10");
        model.addElement("sfwioahd/xe");
        contador += 1;
         */

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        textArea1 = new java.awt.TextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUsuarios = new javax.swing.JList();
        jProgressBar1 = new javax.swing.JProgressBar();
        btExecutar = new javax.swing.JButton();
        btSalvar = new javax.swing.JToggleButton();
        btCarregar = new javax.swing.JToggleButton();
        painelInterfaces = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        chCriaDir = new java.awt.Checkbox();
        txCaminhoGeracao = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        chIntMapeamento = new javax.swing.JCheckBox();
        chSynonyms = new javax.swing.JCheckBox();
        btSearch = new javax.swing.JToggleButton();
        btChekAll = new javax.swing.JToggleButton();
        chSapMapeamento = new javax.swing.JCheckBox();
        chViews = new javax.swing.JCheckBox();
        chSequences = new javax.swing.JCheckBox();
        chSistemas = new javax.swing.JCheckBox();
        chArquivosExternos = new javax.swing.JCheckBox();
        chInterfaces = new javax.swing.JCheckBox();
        btUncheall = new javax.swing.JToggleButton();
        chObjetos = new javax.swing.JCheckBox();
        chTabelasTemporiarias = new javax.swing.JCheckBox();
        chNomePasta = new javax.swing.JCheckBox();
        chConexaoPorArquivo = new javax.swing.JCheckBox();
        chDebug = new java.awt.Checkbox();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txService = new java.awt.TextField();
        txSid = new java.awt.TextField();
        txHost = new java.awt.TextField();
        txPort = new java.awt.TextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txItPass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txIoPass = new java.awt.TextField();
        txBGUser = new javax.swing.JTextField();
        txItUser = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txIoUser = new java.awt.TextField();
        txBGPass = new javax.swing.JTextField();
        txBSUser = new javax.swing.JTextField();
        txBSPass = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txISUser = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txISPass = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txCEUser = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txCEPass = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txCIUser = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txCIPass = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txEXUser = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txEXPass = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txDBUser = new javax.swing.JTextField();
        txDBPass = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jTextField2 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txDBLinkCAI = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txDBLinkAPPS = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txAPPSUser = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txAPPSPass = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txCAIUser = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txCAIPass = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        txWhereInterfaces = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListInterfaces = new javax.swing.JList();
        chScriptsSemVinculo = new javax.swing.JCheckBox();
        btAdd = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        btClear = new javax.swing.JToggleButton();
        btTesteConexao = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CvsStructure");
        setBackground(new java.awt.Color(0, 0, 0));
        setBounds(new java.awt.Rectangle(300, 150, 500, 500));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Comic Sans MS", 0, 10));
        setForeground(java.awt.Color.black);
        setName("frameCVSStruct"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 254, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jListUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Usu√°rios:"));
        jListUsuarios.setFont(new java.awt.Font("Arial", 0, 10));
        jListUsuarios.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListUsuarios);

        btExecutar.setText("Executar");
        btExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExecutarActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btCarregar.setText("Carregar");
        btCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarregarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Op√ß√µes para execu√ß√£o:"));

        chCriaDir.setLabel("Criar Diretorios");
        chCriaDir.setName("chCriaDir"); // NOI18N
        chCriaDir.setState(true);
        chCriaDir.setVisible(false);

        txCaminhoGeracao.setText(".\\");

            jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 11));
            jLabel7.setText("Caminho para gera√ß√£o dos Scripts:");

            chIntMapeamento.setSelected(true);
            chIntMapeamento.setText("Int Mapeamento");

            chSynonyms.setSelected(true);
            chSynonyms.setText("Synonyms");

            btSearch.setText("...");
            btSearch.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btSearchActionPerformed(evt);
                }
            });

            btChekAll.setText("chek all");
            btChekAll.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btChekAllActionPerformed(evt);
                }
            });

            chSapMapeamento.setSelected(true);
            chSapMapeamento.setText("Sap Mapeamento");

            chViews.setSelected(true);
            chViews.setText("Views");

            chSequences.setSelected(true);
            chSequences.setText("Sequences");

            chSistemas.setSelected(true);
            chSistemas.setText("Sistemas");

            chArquivosExternos.setSelected(true);
            chArquivosExternos.setText("Arquivos Externos");

            chInterfaces.setSelected(true);
            chInterfaces.setText("Interfaces");

            btUncheall.setText("unchek all");
            btUncheall.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btUncheallActionPerformed(evt);
                }
            });

            chObjetos.setSelected(true);
            chObjetos.setText("Objetos");

            chTabelasTemporiarias.setSelected(true);
            chTabelasTemporiarias.setText("Tabelas Temporarias");

            chNomePasta.setText("Utilizar sistema para definir nomenclatura das pastas das interfaces");

            chConexaoPorArquivo.setText("Utilizar uma conex√£o por arquivo");

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(chNomePasta)
                                .addComponent(chConexaoPorArquivo))
                            .addContainerGap())
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(chTabelasTemporiarias)
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chCriaDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chArquivosExternos)
                                    .addComponent(chInterfaces)
                                    .addComponent(chSequences))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chIntMapeamento)
                                    .addComponent(chSynonyms)
                                    .addComponent(chSistemas))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(chObjetos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                        .addComponent(btUncheall))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(chViews)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                                        .addComponent(btChekAll))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(chSapMapeamento)
                                        .addContainerGap())))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txCaminhoGeracao, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                        .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7))
                                .addContainerGap()))))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(chCriaDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chIntMapeamento)
                                .addComponent(chSapMapeamento)
                                .addComponent(chInterfaces))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chSynonyms)
                                .addComponent(btChekAll)
                                .addComponent(chViews)
                                .addComponent(chArquivosExternos))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chSistemas)
                                .addComponent(chSequences))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(chTabelasTemporiarias))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btUncheall)
                            .addComponent(chObjetos)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txCaminhoGeracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btSearch))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(chNomePasta)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chConexaoPorArquivo)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            chDebug.setLabel("debug");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chDebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(34, Short.MAX_VALUE))
            );

            painelInterfaces.addTab("Op√ß√µes", jPanel2);

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informa√ß√µes para Conex√£o:"));
            jPanel1.setFont(new java.awt.Font("Comic Sans MS", 3, 11));

            jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

            txService.setFont(new java.awt.Font("Arial", 0, 10));
            txService.setName("txService"); // NOI18N

            txSid.setFont(new java.awt.Font("Arial", 0, 10));
            txSid.setName("txSid"); // NOI18N

            txHost.setFont(new java.awt.Font("Arial", 0, 10));

            txPort.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel6.setFont(new java.awt.Font("Arial", 2, 10));
            jLabel6.setText("Port:");

            jLabel5.setFont(new java.awt.Font("Arial", 2, 10));
            jLabel5.setText("Host:");

            jLabel4.setFont(new java.awt.Font("Arial", 2, 10));
            jLabel4.setText("Sid:");

            jLabel3.setFont(new java.awt.Font("Arial", 2, 10));
            jLabel3.setText("Service Name:");

            javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
            jPanel4.setLayout(jPanel4Layout);
            jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(19, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txPort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txHost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txSid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txService, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );
            jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(txService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(txSid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(txHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(txPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            );

            jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

            jLabel9.setFont(new java.awt.Font("Arial", 0, 10));
            jLabel9.setText("IT Pass:");

            txItPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel2.setFont(new java.awt.Font("Arial", 0, 10));
            jLabel2.setText("IO Pass:");

            txIoPass.setFont(new java.awt.Font("Arial", 0, 10));
            txIoPass.setName("txIoPass"); // NOI18N

            txBGUser.setFont(new java.awt.Font("Arial", 0, 10));

            txItUser.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel8.setFont(new java.awt.Font("Arial", 0, 10));
            jLabel8.setText("IT User:");

            jLabel1.setFont(new java.awt.Font("Arial", 0, 10));
            jLabel1.setText("IO User:");

            txIoUser.setFont(new java.awt.Font("Arial", 0, 10));
            txIoUser.setName("txIoUser"); // NOI18N

            txBGPass.setFont(new java.awt.Font("Arial", 0, 10));

            txBSUser.setFont(new java.awt.Font("Arial", 0, 10));

            txBSPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel10.setText("BG User:");

            jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel11.setText("BS User:");

            jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel12.setText("BG Pass:");

            jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel13.setText("BS Pass");

            jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel14.setText("IS User:");

            txISUser.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel15.setText("IS Pass:");

            txISPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel16.setText("CE User:");

            txCEUser.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel17.setText("CE Pass:");

            txCEPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel18.setText("CI User:");

            txCIUser.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel19.setText("CI Pass:");

            txCIPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel21.setText("EX User:");

            txEXUser.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel22.setText("EX Pass:");

            txEXPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel28.setText("DB User:");

            txDBUser.setFont(new java.awt.Font("Arial", 0, 10));

            txDBPass.setFont(new java.awt.Font("Arial", 0, 10));

            jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel29.setText("DB Pass:");

            javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
            jPanel5.setLayout(jPanel5Layout);
            jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel8)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel14)
                        .addComponent(jLabel16)
                        .addComponent(jLabel18)
                        .addComponent(jLabel21)
                        .addComponent(jLabel28))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txBSUser)
                        .addComponent(txBGUser)
                        .addComponent(txItUser)
                        .addComponent(txIoUser, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txISUser)
                        .addComponent(txCEUser)
                        .addComponent(txCIUser)
                        .addComponent(txEXUser)
                        .addComponent(txDBUser))
                    .addGap(13, 13, 13)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(18, 18, 18)
                            .addComponent(txCEPass))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(18, 18, 18)
                            .addComponent(txISPass))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(18, 18, 18)
                            .addComponent(txBSPass))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txBGPass, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                .addComponent(txIoPass, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                .addComponent(txItPass)))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addGap(18, 18, 18)
                            .addComponent(txCIPass))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addGap(18, 18, 18)
                            .addComponent(txEXPass))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addGap(18, 18, 18)
                            .addComponent(txDBPass)))
                    .addContainerGap(44, Short.MAX_VALUE))
            );
            jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(txIoPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txItPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(txIoUser, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txItUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txBGUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(txBGPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txBSUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txBSPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txISUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txISPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txCEUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txCEPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txCIUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txCIPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txEXUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txEXPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txDBUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txDBPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            );

            jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

            jToggleButton1.setText("Replicar usu√°rios");

            javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
            jPanel9.setLayout(jPanel9Layout);
            jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(7, 7, 7)
                    .addComponent(jToggleButton1)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            painelInterfaces.addTab("Dados Conex√£o", jPanel1);

            jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Oracle"));

            jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel20.setText("DBLink CAI:");

            jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel23.setText("DBLink APPS:");

            jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel24.setText("APPS User:");

            jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel25.setText("APPS Pass:");

            jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel26.setText("CAI User:");

            jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10));
            jLabel27.setText("CAI Pass:");

            javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
            jPanel7.setLayout(jPanel7Layout);
            jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel23)
                        .addComponent(jLabel20)
                        .addComponent(jLabel24)
                        .addComponent(jLabel26))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txDBLinkCAI, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addComponent(txDBLinkAPPS, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addComponent(txAPPSUser, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addComponent(txCAIUser, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel25)
                        .addComponent(jLabel27))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txCAIPass, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addComponent(txAPPSPass, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                    .addContainerGap())
            );
            jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txCAIUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)
                        .addComponent(txCAIPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txAPPSUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24)
                        .addComponent(txAPPSPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txDBLinkCAI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txDBLinkAPPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
            jPanel6.setLayout(jPanel6Layout);
            jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(219, Short.MAX_VALUE))
            );
            jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(150, Short.MAX_VALUE))
            );

            painelInterfaces.addTab("Oracle", jPanel6);

            jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione a interface desejada ou nehuma para [TODAS]"));

            txWhereInterfaces.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    txWhereInterfacesKeyPressed(evt);
                }
            });

            jListInterfaces.setFont(new java.awt.Font("Arial", 0, 9));
            jListInterfaces.setModel(new javax.swing.AbstractListModel() {
                String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane2.setViewportView(jListInterfaces);

            chScriptsSemVinculo.setFont(new java.awt.Font("Arial", 0, 10));
            chScriptsSemVinculo.setSelected(true);
            chScriptsSemVinculo.setText("Gerar scripts comuns sem vinculo com interface selecionada");

            javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
            jPanel8.setLayout(jPanel8Layout);
            jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txWhereInterfaces, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(chScriptsSemVinculo)))
                    .addContainerGap())
            );
            jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addComponent(txWhereInterfaces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chScriptsSemVinculo))
                    .addGap(77, 77, 77))
            );

            painelInterfaces.addTab("Interfaces", jPanel8);

            btAdd.setText("Add");
            btAdd.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btAddActionPerformed(evt);
                }
            });

            btRemover.setText("Remover");
            btRemover.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btRemoverActionPerformed(evt);
                }
            });

            btClear.setText("Clear");
            btClear.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btClearActionPerformed(evt);
                }
            });

            btTesteConexao.setText("Teste Conex√£o");
            btTesteConexao.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btTesteConexaoActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(textArea1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btSalvar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btCarregar))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(322, 322, 322)
                                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(painelInterfaces, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(201, 201, 201)
                            .addComponent(btAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btRemover)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btClear)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btTesteConexao)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btExecutar))
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btSalvar)
                                .addComponent(btCarregar)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(painelInterfaces, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btRemover)
                        .addComponent(btAdd)
                        .addComponent(btClear)
                        .addComponent(btTesteConexao)
                        .addComponent(btExecutar))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExecutarActionPerformed
        jProgressBar1.setIndeterminate(true);

        Thread tThread = new Thread(new Runnable() {

            @Override
            public void run() {
                Estatisticas.zeraEstatisticas();
                ArrayList<String> arrChecks = new ArrayList<String>();

                CVSStructure.chScriptsSemVinculoInterface = "S";
                if (!chScriptsSemVinculo.isSelected()) {
                    CVSStructure.chScriptsSemVinculoInterface = "N";
                }

                if (chArquivosExternos.isSelected()) {
                    arrChecks.add("ArquivosExternos");
                }

                if (chInterfaces.isSelected()) {
                    arrChecks.add("Interfaces");
                }

                if (chCriaDir.getState()) {
                    arrChecks.add("D");
                }

                if (chSynonyms.isSelected()) {
                    arrChecks.add("Synonyms");
                }

                if (chIntMapeamento.isSelected()) {
                    arrChecks.add("IntMapeamento");
                }

                if (chSapMapeamento.isSelected()) {
                    arrChecks.add("SapMapeamento");
                }

                if (chViews.isSelected()) {
                    arrChecks.add("Views");
                }

                if (chSequences.isSelected()) {
                    arrChecks.add("Sequences");
                }

                if (chSistemas.isSelected()) {
                    arrChecks.add("Sistemas");
                }

                if (chObjetos.isSelected()) {
                    arrChecks.add("Objetos");
                }

                if (chTabelasTemporiarias.isSelected()) {
                    arrChecks.add("TabelasTemporarias");
                }

                int cont_user = 0;
                if (!model.isEmpty()) {
                    Calendar cal = Calendar.getInstance(TimeZone.getDefault());
                    String DATE_FORMAT = "yyyy-MM-dd HHmmss";
                    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(DATE_FORMAT);
                    sdf.setTimeZone(TimeZone.getDefault());

                    Object[] sSelectedUser = jListUsuarios.getSelectedValues();
                    if (sSelectedUser.length != 0) {
                        // Obtendo as bases selecionadas
                        for (int j = 0; j < sSelectedUser.length; j++) {

                            //
                            for (Cliente cliente: collectionCliente) {
                                if (cliente.getIoUser() != null ) {
                                    String userArray = cliente.getIoUser().getUser().toUpperCase() + "/" + cliente.getService().toUpperCase();
                                    if (userArray.toUpperCase().equals(((String) sSelectedUser[j]).toUpperCase())) {

                                        setTextArea("#################################################################\n");
                                        setTextArea("## " + userArray + "##\n");
                                        setTextArea("## Data Hora Inicio " + sdf.format(cal.getTime()) + "##\n");
                                        setTextArea("#################################################################\n\n");

                                        if (chDebug.getState()) {
                                            CVSStructure.sDebug = "S";
                                        }

                                        if (chNomePasta.isSelected()) {
                                            CVSStructure.chNomePasta = "S";
                                        } else {
                                            CVSStructure.chNomePasta = "N";
                                        }

                                        if (chConexaoPorArquivo.isSelected()) {
                                            CVSStructure.chConexaoPorArquivos = "S";
                                        } else {
                                            CVSStructure.chConexaoPorArquivos = "N";
                                        }

                                        try {
                                            //Conectando na Base do InOut
                                            try {
                                                ConnectionInout.initialize(cliente);

                                                if (ConnectionInout.getConnection() == null) {
                                                    JOptionPane.showMessageDialog(null, "Erro ao conectar no inout !");
                                                }
                                            } catch (SQLException ex) {
                                                JOptionPane.showMessageDialog(null, "Erro na conex√£o inout !" + ex.getMessage());
                                            }

                                            //Conectando na Base de Integra√ß√£o
                                            if (cliente.getItUser().getUser() != null && !cliente.getItUser().getUser().isEmpty()) {
                                                try {
                                                    ConnectionIntegracao.initialize(cliente.getDataBase(),
                                                            cliente.getItUser().getUser(),
                                                            cliente.getItUser().getPass(),
                                                            cliente.getPort(),
                                                            cliente.getService());

                                                    if (ConnectionIntegracao.getConnection() == null) {
                                                        JOptionPane.showMessageDialog(null, "Erro ao conectar na integracao !");
                                                    }
                                                } catch (SQLException ex) {
                                                    JOptionPane.showMessageDialog(null, "Erro na conex√£o integra√ß√£o !" + ex.getMessage());
                                                }
                                            }

                                            cvsStruct.setSSelectInterfaces(jListInterfaces.getSelectedValues());
                                            cvsStruct.setCliente(cliente);
                                            cvsStruct.setCaminhoGeracao(getTxCaminhaGeracao());
                                            cvsStruct.spoolCVSStruture(arrChecks);
                                        } catch (SQLException ex) {
                                            Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
                                        } catch (IOException ex) {
                                            Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                        cont_user += 1;

                                        setTextArea("\n#################################################################\n");
                                        setTextArea("## GERA√á√ÉO DOS SCRIPTS CONCLUIDA - " + userArray + "\n");
                                        setTextArea("## Data Hora Fim " + sdf.format(cal.getTime()) + " \n");
                                        setTextArea("## Total Sistemas Extraidas: " + Estatisticas.nTotalSistemas + "\n");
                                        setTextArea("## Total Interfaces Extraidas: " + Estatisticas.nTotalInterfaces + "\n");
                                        setTextArea("## Total Tabelas Temporarias Extraidas: " + Estatisticas.nTotalTabelas + "\n");
                                        setTextArea("## Total Views Extraidas: " + Estatisticas.nTotalViews + "\n");
                                        setTextArea("## Total Synonyms Extraidas: " + Estatisticas.nTotalSynonyms + "\n");
                                        setTextArea("## Total Sequences Extraidas: " + Estatisticas.nTotalSequences + "\n");
                                        setTextArea("## Total Packages Extraidas: " + Estatisticas.nTotalPackages + "\n");
                                        setTextArea("## Total SapMapeamento Extraidas: " + Estatisticas.nTotalSapMapeamento + "\n");
                                        setTextArea("## Total IntMapeamento Extraidas: " + Estatisticas.nTotalIntMapeamento + "\n");
                                        setTextArea("## Total Functions\\Procedures Extraidas: " + Estatisticas.nTotalFunctionsProcedures + "\n");
                                        setTextArea("#################################################################\n\n");
                                        jProgressBar1.setIndeterminate(false);

                                    }
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Selecione as bases desejadas para gera√ß√£o dos scripts !");
                        jProgressBar1.setIndeterminate(false);
                    }
                    arrChecks.removeAll(arrChecks);
                }
            }
        });
        tThread.start();

    }//GEN-LAST:event_btExecutarActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        String conn = null;
        Cliente cliente =  new Cliente();

        if (txService.getText().isEmpty() && txSid.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe a Service/Sid");
        } else {
            if (txIoUser.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Informe Usuario");
            } else {
                if (txIoPass.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe Password");
                } else {
                    if (txPort.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Informe a Porta para conex√£o");
                    } else {
                        if (txHost.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null, "Informe o Host conex√£o");
                        } else {
                            if (model.contains(txIoUser.getText() + "/" + txService.getText()) || model.contains(txIoUser.getText() + "/" + txSid.getText())) {
                                JOptionPane.showMessageDialog(null, "Usuarios j√° cadastrado");
                            } else {
                                if (txService.getText() != null || !txService.getText().isEmpty()) {
                                    cliente.setConn("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=" + txHost.getText() + ")(PORT=" + txPort.getText() + ")))(CONNECT_DATA=(SERVICE_NAME=" + txService.getText() + ")))");
                                    model.addElement(txIoUser.getText().toLowerCase().trim() + "/" + txService.getText().toLowerCase().trim());
                                    cliente.setService(txService.getText());
                                } else if (txSid.getText() != null || !txSid.getText().isEmpty()) {
                                    cliente.setConn("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=" + txHost.getText() + ")(PORT=" + txPort.getText() + ")))(CONNECT_DATA=(SID=" + txSid.getText() + ")))");
                                    model.addElement(txIoUser.getText().toLowerCase().trim() + "/" + txSid.getText().toLowerCase().trim());
                                    cliente.setService(txSid.getText());
                                }

                                Usuario ioUser = new Usuario();
                                ioUser.setUser(txIoUser.getText());
                                ioUser.setPass(txIoPass.getText());
                                cliente.setIoUser(ioUser);

                                Usuario itUser = new Usuario();
                                itUser.setUser(txItUser.getText());
                                itUser.setPass(txItPass.getText());
                                cliente.setItUser(itUser);

                                Usuario bgUser = new Usuario();
                                bgUser.setUser(txBGUser.getText());
                                bgUser.setPass(txAPPSPass.getText());
                                cliente.setBgUser(bgUser);

                                Usuario bsUser = new Usuario();
                                bsUser.setUser(txBSUser.getText());
                                bsUser.setPass(txBSPass.getText());
                                cliente.setBsUser(bsUser);

                                Usuario isUser = new Usuario();
                                isUser.setUser(txISUser.getText());
                                isUser.setPass(txISPass.getText());
                                cliente.setIsUser(isUser);

                                Usuario ceUser = new Usuario();
                                ceUser.setUser(txCEUser.getText());
                                ceUser.setPass(txCEPass.getText());
                                cliente.setCeUser(ceUser);

                                Usuario ciUser = new Usuario();
                                ciUser.setUser(txCIUser.getText());
                                ciUser.setPass(txCIPass.getText());
                                cliente.setCiUser(ciUser);

                                Usuario exUser = new Usuario();
                                exUser.setUser(txEXUser.getText());
                                exUser.setPass(txEXPass.getText());
                                cliente.setExUser(exUser);

                                Usuario dbUser = new Usuario();
                                dbUser.setUser(txDBUser.getText());
                                dbUser.setPass(txDBPass.getText());
                                cliente.setDbUser(dbUser);

                                Usuario caiUser = new Usuario();
                                caiUser.setUser(txCAIUser.getText());
                                caiUser.setPass(txCAIPass.getText());
                                cliente.setDbUser(caiUser);

                                Usuario appsUser = new Usuario();
                                appsUser.setUser(txAPPSUser.getText());
                                appsUser.setPass(txAPPSPass.getText());
                                cliente.setDbUser(appsUser);

                                cliente.setDbLinkApps(conn);
                                cliente.setAppsUser(appsUser);
                                
                                cliente.setConn(conn);
                                cliente.setService(txService.getText());
                                cliente.setPort(txPort.getText());
                                cliente.setTns(txService.getText());
                                cliente.setDataBase(txHost.getText());
                                collectionCliente.add(cliente);
                                
                                btSalvar.setEnabled(true);
                                btCarregar.setEnabled(true);
                            }
                        }
                    }
                }
            }
        }
}//GEN-LAST:event_btAddActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        // TODO add your handling code here:
        String sSelectedUser = jListUsuarios.getSelectedValue().toString();
        //JOptionPane.showMessageDialog(null, sSelectedUser);
        Object[] options = {"OK", "CANCEL"};
        if (JOptionPane.showOptionDialog(null, "Confirma a remo√ß√£o do usu√°rio " + sSelectedUser + "?", "Aten√ß√£o",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.OK_CANCEL_OPTION,
                null, options, options[0]) == 0) {

            for (Cliente cliente: collectionCliente) {
                collectionCliente.remove(cliente);
                model.removeElement(sSelectedUser);
            }
            btSalvar.setEnabled(true);
            btCarregar.setEnabled(true);
        }
}//GEN-LAST:event_btRemoverActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        Object[] options = {"OK", "CANCEL"};
        if (JOptionPane.showOptionDialog(null, "Deseja gravar os usuarios cadastrados ?", "Aten√ß√£o",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.OK_CANCEL_OPTION,
                null, options, options[0]) == 0) {

            StringBuilder strOutScripts = new StringBuilder();
            String fileNameScripts = ".\\ConfigCVSStructure.conf";
            for (Cliente cliente: collectionCliente) {
                if (cliente.getIoUser().getUser() != null && cliente.getIoUser().getUser() != null) {
                    //String userArray = arrUsers[i][2].toUpperCase()+"/"+arrUsers[i][4].toUpperCase();
                    strOutScripts.append(cliente.getIoUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getIoUser().getPass());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getItUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getItUser().getPass());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getConn());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getBgUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getBgUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getExUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getExUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getIsUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getIsUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getDbUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getDbUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getCeUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getCeUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getCiUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getCiUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getCaiUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getCaiUser().getPass());
                    strOutScripts.append(";");

                    strOutScripts.append(cliente.getAppsUser().getUser());
                    strOutScripts.append(";");
                    strOutScripts.append(cliente.getAppsUser().getPass());

                    strOutScripts.append("\n");
                }
            }

            //logMessage("Creating or appending to file " + fileNameScripts);
            try {
                File fileScripts = new File(fileNameScripts);
                if (!fileScripts.exists()) {
                    fileScripts.createNewFile();
                }

                FileWriter fwScripts = new FileWriter(fileScripts, false);
                fwScripts.write(strOutScripts.toString(), 0, strOutScripts.length());
                fwScripts.close();
            } catch (IOException ex) {
                Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            btSalvar.setEnabled(false);
            btCarregar.setEnabled(false);
        }
}//GEN-LAST:event_btSalvarActionPerformed

    private void btCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarregarActionPerformed
        carregarUsuarios();
        btSalvar.setEnabled(false);
        btCarregar.setEnabled(false);
}//GEN-LAST:event_btCarregarActionPerformed

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        this.cleanField();
    }//GEN-LAST:event_btClearActionPerformed

    public void carregarUsuarios() {
        String readLine = "";

        model.removeAllElements();
        try {
            File fileT = new File(".\\ConfigCVSStructure.conf");
            FileInputStream file;
            file = new FileInputStream(fileT);

            Scanner scanner = new Scanner(file);
            while (scanner.hasNext()) {
                readLine = scanner.next();

                String arrUsersConf[] = readLine.split(";");

                String sTNS = readLine.substring(readLine.lastIndexOf("SERVICE_NAME") + 13, readLine.lastIndexOf(")))"));
                String sSid = "";
                if (readLine.lastIndexOf("SID") != -1) {
                    sSid = readLine.substring(readLine.lastIndexOf("SID") + 4, readLine.lastIndexOf(")))"));
                }
                String sHost = readLine.substring(readLine.lastIndexOf("HOST") + 5, readLine.lastIndexOf(")(PORT"));
                String sPort = readLine.substring(readLine.lastIndexOf("PORT") + 5, readLine.lastIndexOf(")))("));

                Cliente cliente = new Cliente();
                Usuario ioUser = new Usuario();
                ioUser.setUser(arrUsersConf[0]);
                ioUser.setPass(arrUsersConf[1]);
                cliente.setIoUser(ioUser);

                Usuario itUser = new Usuario();
                itUser.setUser(arrUsersConf[2]);
                itUser.setPass(arrUsersConf[3]);
                cliente.setItUser(itUser);

                Usuario bgUser = new Usuario();
                bgUser.setUser("");
                bgUser.setPass("");
                cliente.setBgUser(bgUser);

                Usuario bsUser = new Usuario();
                bsUser.setUser("");
                bsUser.setPass("");
                cliente.setBsUser(bsUser);

                Usuario isUser = new Usuario();
                isUser.setUser("");
                isUser.setPass("");
                cliente.setIsUser(isUser);

                Usuario ceUser = new Usuario();
                ceUser.setUser("");
                ceUser.setPass("");
                cliente.setCeUser(ceUser);

                Usuario ciUser = new Usuario();
                ciUser.setUser("");
                ciUser.setPass("");
                cliente.setCiUser(ciUser);

                Usuario exUser = new Usuario();
                exUser.setUser("");
                exUser.setPass("");
                cliente.setExUser(exUser);

                Usuario dbUser = new Usuario();
                dbUser.setUser("");
                dbUser.setPass("");
                cliente.setDbUser(dbUser);

                Usuario caiUser = new Usuario();
                caiUser.setUser("");
                caiUser.setPass("");
                cliente.setCaiUser(caiUser);

                Usuario appsUser = new Usuario();
                appsUser.setUser("");
                appsUser.setPass("");
                cliente.setAppsUser(appsUser);

                cliente.setDbLinkApps(sSid);
                cliente.setDbLinkCai(sSid);

                cliente.setConn(arrUsersConf[4]);
                cliente.setService(sTNS);
                cliente.setDataBase(sHost);
                cliente.setPort(sPort);
                collectionCliente.add(cliente);

                model.addElement(cliente.getIoUser().getUser() + "/" + sTNS);
            }
            file.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cleanField() {
        txIoUser.setText("");
        txIoPass.setText("");

        txBGUser.setText("");
        txBGPass.setText("");

        txEXUser.setText("");
        txEXPass.setText("");

        txISUser.setText("");
        txISPass.setText("");

        txDBUser.setText("");
        txDBPass.setText("");

        txBSUser.setText("");
        txBSPass.setText("");

        txCEUser.setText("");
        txCEPass.setText("");

        txCIUser.setText("");
        txCIPass.setText("");

        txItUser.setText("");
        txItPass.setText("");

        txHost.setText("");
        txPort.setText("");
        txService.setText("");
        txSid.setText("");
    }
    private void jListUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListUsuariosMouseClicked
        String sSelectedUser = jListUsuarios.getSelectedValue().toString();

        this.cleanField();
        for (Cliente cliente: collectionCliente) {
            if (cliente.getIoUser().getUser() != null) {
                String userArray = cliente.getIoUser().getUser().toUpperCase() + "/" + cliente.getService().toUpperCase();
                if (userArray.toUpperCase().equals(sSelectedUser.toUpperCase())) {

                    txHost.setText(cliente.getDataBase());
                    txPort.setText(cliente.getPort());
                    txSid.setText(cliente.getService());
                    txService.setText(cliente.getService());

                    txIoUser.setText(cliente.getIoUser().getUser());
                    txIoPass.setText(cliente.getIoUser().getPass());

                    txItUser.setText(cliente.getItUser().getUser());
                    txItPass.setText(cliente.getItUser().getPass());

                    txBGUser.setText(cliente.getBgUser().getUser());
                    txBGPass.setText(cliente.getBgUser().getPass());

                    txBSUser.setText(cliente.getBsUser().getUser());
                    txBSPass.setText(cliente.getBsUser().getPass());

                    txCEUser.setText(cliente.getCeUser().getUser());
                    txCEPass.setText(cliente.getCeUser().getPass());

                    txCIUser.setText(cliente.getCiUser().getUser());
                    txCIPass.setText(cliente.getCiUser().getPass());

                    txDBUser.setText(cliente.getDbUser().getUser());
                    txDBPass.setText(cliente.getDbUser().getPass());

                    txEXUser.setText(cliente.getExUser().getUser());
                    txEXPass.setText(cliente.getExUser().getPass());

                    txISUser.setText(cliente.getIsUser().getUser());
                    txISPass.setText(cliente.getIsUser().getPass());

                    txCAIUser.setText(cliente.getCaiUser().getUser());
                    txCAIPass.setText(cliente.getCaiUser().getPass());

                    txAPPSUser.setText(cliente.getAppsUser().getUser());
                    txAPPSPass.setText(cliente.getAppsUser().getPass());

                    Cliente.setInstance(cliente);

                    break;
                }
            }
        }

//        Thread tThread = new Thread(new Runnable() {
//        public void run() {
        try {
            ConnectionInout.disconnect();
            ConnectionInout.initialize(Cliente.getInstance());
            modelInterfaces.removeAllElements();
            ArrayList interfaces = cvsStruct.readInterfaces();
            for (int i = 0; i < interfaces.size(); i++) {
                modelInterfaces.addElement(interfaces.get(i));
            }
            setArrInterfaces(interfaces);
            ConnectionInout.disconnect();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
//        }
//        });
//         tThread.start();

    }//GEN-LAST:event_jListUsuariosMouseClicked

    private void btTesteConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTesteConexaoActionPerformed
        try {
            ConnectionInout.initialize(Cliente.getInstance());
            if (ConnectionInout.getConnection() != null) {
                JOptionPane.showMessageDialog(null, "OK !");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao conectar !");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conex√£o !" + ex.getMessage());
        } finally {
            try {
                ConnectionInout.disconnect();
            } catch (SQLException ex) {
                Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btTesteConexaoActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        JFileChooser fc = new JFileChooser();

        // restringe a amostra a diretorios apenas
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File diretorio = fc.getSelectedFile();
            //JOptionPane.showMessageDialog(null, "Voce escolheu o diret√≥rio: " + diretorio.getName());
            txCaminhoGeracao.setText(diretorio.getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum diretorio.");
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        //Desconectando do banco
        try {
            ConnectionInout.disconnect();
        } catch (SQLException ex) {
            Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosed

    private void btUncheallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUncheallActionPerformed
        chArquivosExternos.setSelected(false);
        chIntMapeamento.setSelected(false);
        chInterfaces.setSelected(false);
        chSapMapeamento.setSelected(false);
        chSequences.setSelected(false);
        chSistemas.setSelected(false);
        chSynonyms.setSelected(false);
        chViews.setSelected(false);
        chObjetos.setSelected(false);
        chTabelasTemporiarias.setSelected(false);
    }//GEN-LAST:event_btUncheallActionPerformed

    private void btChekAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChekAllActionPerformed
        chArquivosExternos.setSelected(true);
        chIntMapeamento.setSelected(true);
        chInterfaces.setSelected(true);
        chSapMapeamento.setSelected(true);
        chSequences.setSelected(true);
        chSistemas.setSelected(true);
        chSynonyms.setSelected(true);
        chViews.setSelected(true);
        chObjetos.setSelected(true);
        chTabelasTemporiarias.setSelected(true);
    }//GEN-LAST:event_btChekAllActionPerformed

    private void txWhereInterfacesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txWhereInterfacesKeyPressed
        modelInterfaces.removeAllElements();
        for (int i = 0; i < getArrInterfaces().size(); i++) {
            if (txWhereInterfaces.getText().isEmpty() || getArrInterfaces().get(i).toUpperCase().contains(txWhereInterfaces.getText().toUpperCase())) {
                modelInterfaces.addElement(getArrInterfaces().get(i));
            }
        }
}//GEN-LAST:event_txWhereInterfacesKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new CvsStructureFrame().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(CvsStructureFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * @return the arrInterfaces
     */
    public ArrayList<String> getArrInterfaces() {
        return arrInterfaces;
    }

    /**
     * @param arrInterfaces the arrInterfaces to set
     */
    public void setArrInterfaces(ArrayList<String> arrInterfaces) {
        this.arrInterfaces = arrInterfaces;
    }

    public javax.swing.JCheckBox getChIntMapeamento() {
        return chIntMapeamento;
    }

    public void setTextArea(String textArea) {
        this.textArea1.append(textArea);
    }

    public String getTxItUser() {
        return this.txItUser.getText().toString();
    }

    public String getTxItPass() {
        return this.txItPass.getText().toString();
    }

    public String getTxCaminhaGeracao() {
        return this.txCaminhoGeracao.getText().toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JToggleButton btCarregar;
    private javax.swing.JToggleButton btChekAll;
    private javax.swing.JToggleButton btClear;
    private javax.swing.JButton btExecutar;
    private javax.swing.JButton btRemover;
    private javax.swing.JToggleButton btSalvar;
    private javax.swing.JToggleButton btSearch;
    private javax.swing.JToggleButton btTesteConexao;
    private javax.swing.JToggleButton btUncheall;
    private javax.swing.JCheckBox chArquivosExternos;
    private javax.swing.JCheckBox chConexaoPorArquivo;
    private java.awt.Checkbox chCriaDir;
    private java.awt.Checkbox chDebug;
    private javax.swing.JCheckBox chIntMapeamento;
    private javax.swing.JCheckBox chInterfaces;
    private javax.swing.JCheckBox chNomePasta;
    private javax.swing.JCheckBox chObjetos;
    private javax.swing.JCheckBox chSapMapeamento;
    private javax.swing.JCheckBox chScriptsSemVinculo;
    private javax.swing.JCheckBox chSequences;
    private javax.swing.JCheckBox chSistemas;
    private javax.swing.JCheckBox chSynonyms;
    private javax.swing.JCheckBox chTabelasTemporiarias;
    private javax.swing.JCheckBox chViews;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListInterfaces;
    private javax.swing.JList jListUsuarios;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTabbedPane painelInterfaces;
    private java.awt.Panel panel1;
    private java.awt.TextArea textArea1;
    private javax.swing.JTextField txAPPSPass;
    private javax.swing.JTextField txAPPSUser;
    private javax.swing.JTextField txBGPass;
    private javax.swing.JTextField txBGUser;
    private javax.swing.JTextField txBSPass;
    private javax.swing.JTextField txBSUser;
    private javax.swing.JTextField txCAIPass;
    private javax.swing.JTextField txCAIUser;
    private javax.swing.JTextField txCEPass;
    private javax.swing.JTextField txCEUser;
    private javax.swing.JTextField txCIPass;
    private javax.swing.JTextField txCIUser;
    private javax.swing.JTextField txCaminhoGeracao;
    private javax.swing.JTextField txDBLinkAPPS;
    private javax.swing.JTextField txDBLinkCAI;
    private javax.swing.JTextField txDBPass;
    private javax.swing.JTextField txDBUser;
    private javax.swing.JTextField txEXPass;
    private javax.swing.JTextField txEXUser;
    private java.awt.TextField txHost;
    private javax.swing.JTextField txISPass;
    private javax.swing.JTextField txISUser;
    private java.awt.TextField txIoPass;
    private java.awt.TextField txIoUser;
    private javax.swing.JTextField txItPass;
    private javax.swing.JTextField txItUser;
    private java.awt.TextField txPort;
    private java.awt.TextField txService;
    private java.awt.TextField txSid;
    private javax.swing.JTextField txWhereInterfaces;
    // End of variables declaration//GEN-END:variables

}
